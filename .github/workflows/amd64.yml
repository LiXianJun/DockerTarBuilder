name: x86-64 Pull and Save Docker Image
on:
  workflow_dispatch:
    inputs:
      docker_images:
        description: '请填写docker镜像名称 多个用英文逗号分开'
        required: true
        default: 'python:3.10.11-slim-buster'  # 设置默认的 Docker 镜像列表

jobs:
  pull_and_package:
    runs-on: ubuntu-latest
    steps:
    - name: Before freeing up disk space
      run: |
        echo "Before freeing up disk space"
        echo "=============================================================================="
        df -Th  /var/lib/docker
        echo "=============================================================================="
    
    - name: clean disk space
      run: |
          sudo journalctl --vacuum-size=100M
          sudo rm -rf /var/tmp/*
          sudo rm -rf /tmp/*
          sudo apt-get clean
          sudo apt-get autoremove --purge

    # 增加可用磁盘空间
    - name: Maximize build space
      uses: easimon/maximize-build-space@master
      with:

       root-reserve-mb: 2048
       swap-size-mb: 128
       remove-dotnet: 'true'
       remove-haskell: 'true'
        # 如果空间还是不够用，可以把以下开启，清理出更多空间
       remove-android: 'true'
       remove-codeql: 'true'
       build-mount-path: '/var/lib/docker/'

    - name: Restart docker
      run: sudo service docker restart
    - name: Free up disk space complete
      run: |
        echo "Free up disk space complete"
        echo "=============================================================================="
        df -Th  /var/lib/docker
        echo "=============================================================================="
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Clean up Docker to free space
      run: |
          docker system prune -a -f
          docker volume prune -a -f
          docker image prune -a -f
          docker container prune -a -f
          rm -f *-amd64.tar
    - name: Pull Docker Images and Package
      run: |
        images="${{ github.event.inputs.docker_images }}"
        IFS=',' read -r -a image_array <<< "$images"
        for image in "${image_array[@]}"; do
          docker pull "${image}" --platform "linux/amd64"
          docker save "${image}" -o "${image//\//_}-amd64.tar"
          docker image prune -f  # 清理未使用的镜像
        done

    - name: Compress the TAR files
      run: tar -czf x86-64-images.tar.gz *-amd64.tar

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: docker-images-tar
        path: x86-64-images.tar.gz
        retention-days: 1  # 将保留天数设置为 1 天 最多可设置90天

    - name: Clean up intermediate files
      run: |
        rm *-amd64.tar
